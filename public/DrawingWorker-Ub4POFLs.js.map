{"version":3,"file":"DrawingWorker-Ub4POFLs.js","sources":["src/components/mediaEditor/services/DrawingWorker.js"],"sourcesContent":["self.addEventListener('message', (event) => {\n  const {command, payload} = event.data;\n\n  /**\n   * @private\n   */\n  function gaussianBlur(imageData, width, height, radius) {\n    const sigma = radius / 2;\n    const kernelSize = Math.ceil(radius * 2) + 1;\n    const kernel = createGaussianKernel(kernelSize, sigma);\n    const pixels = imageData.data;\n    const newImageData = new ImageData(width, height);\n    const newPixels = newImageData.data;\n\n    /**\n     * Horizontal pass\n     */\n    for(let y = 0; y < height; y++) {\n      for(let x = 0; x < width; x++) {\n        let r = 0;\n        let g = 0;\n        let b = 0;\n        let a = 0;\n        let weightSum = 0;\n        for(let i = -Math.floor(kernelSize / 2); i <= Math.floor(kernelSize / 2); i++) {\n          const nx = x + i;\n          if(nx >= 0 && nx < width) {\n            const weight = kernel[i + Math.floor(kernelSize / 2)];\n            const offset = (y * width + nx) * 4;\n            r += pixels[offset] * weight;\n            g += pixels[offset + 1] * weight;\n            b += pixels[offset + 2] * weight;\n            a += pixels[offset + 3] * weight;\n            weightSum += weight;\n          }\n        }\n        const offset = (y * width + x) * 4;\n        newPixels[offset] = r / weightSum;\n        newPixels[offset + 1] = g / weightSum;\n        newPixels[offset + 2] = b / weightSum;\n        newPixels[offset + 3] = a / weightSum;\n      }\n    }\n\n    /**\n     * Vertical pass\n     */\n    const tempImageData = new ImageData(new Uint8ClampedArray(newPixels), width, height);\n    const tempPixels = tempImageData.data;\n\n    for(let y = 0; y < height; y++) {\n      for(let x = 0; x < width; x++) {\n        let r = 0;\n        let g = 0;\n        let b = 0;\n        let a = 0;\n        let weightSum = 0;\n        for(let i = -Math.floor(kernelSize / 2); i <= Math.floor(kernelSize / 2); i++) {\n          const ny = y + i;\n          if(ny >= 0 && ny < height) {\n            const weight = kernel[i + Math.floor(kernelSize / 2)];\n            const offset = (ny * width + x) * 4;\n            r += tempPixels[offset] * weight;\n            g += tempPixels[offset + 1] * weight;\n            b += tempPixels[offset + 2] * weight;\n            a += tempPixels[offset + 3] * weight;\n            weightSum += weight;\n          }\n        }\n        const offset = (y * width + x) * 4;\n        newPixels[offset] = r / weightSum;\n        newPixels[offset + 1] = g / weightSum;\n        newPixels[offset + 2] = b / weightSum;\n        newPixels[offset + 3] = a / weightSum;\n      }\n    }\n\n    return newImageData;\n  }\n\n  /**\n   * @private\n   */\n  function createGaussianKernel(size, sigma) {\n    const kernel = [];\n    const mean = size / 2;\n    let sum = 0;\n    for(let x = 0; x < size; x++) {\n      kernel[x] = Math.exp(-0.5 * ((x - mean) / sigma) ** 2);\n      sum += kernel[x];\n    }\n    for(let x = 0; x < size; x++) {\n      kernel[x] /= sum;\n    }\n    return kernel;\n  }\n\n  switch(command) {\n    case 'blur': {\n      const result = gaussianBlur(payload.image, payload.width, payload.height, payload.radius);\n\n      postMessage({\n        command: 'blur',\n        payload: {\n          image: result\n        }\n      }, [result.data.buffer]);\n      break;\n    }\n  }\n});\n\nself.onerror = function(errorEvent) {\n  console.error('Worker error:', errorEvent);\n  postMessage({error: errorEvent.message});\n};\n"],"names":["event","command","payload","gaussianBlur","imageData","width","height","radius","sigma","kernelSize","kernel","createGaussianKernel","pixels","newImageData","newPixels","y","x","r","g","b","a","weightSum","i","nx","weight","offset","tempPixels","ny","size","mean","sum","result","errorEvent"],"mappings":"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"}